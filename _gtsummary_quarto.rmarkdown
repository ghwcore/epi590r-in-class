---
title: "gtsummary in quarto"
execute:
  warning: false
format:
  html:
    theme: zephyr
echo: false
---

```{r}
#| echo: false
library(tidyverse)
library(gtsummary)
nlsy_cols <- c("glasses", "eyesight", "sleep_wkdy", "sleep_wknd", 
               "id", "nsibs", "samp", "race_eth", "sex", "region", 
               "income", "res_1980", "res_2002", "age_bir")
nlsy <- read_csv(here::here("data", "raw", "nlsy.csv"), 
                 na = c("-1", "-2", "-3", "-4", "-5", "-998"),
                 skip = 1, col_names = nlsy_cols) |> 
  mutate(region_cat = factor(region, labels = c("Northeast", "North Central", "South", "West")),
         sex_cat = factor(sex, labels = c("Male", "Female")),
         race_eth_cat = factor(race_eth, labels = c("Hispanic", "Black", "Non-Black, Non-Hispanic")),
         eyesight_cat = factor(eyesight, labels = c("Excellent", "Very good", "Good", "Fair", "Poor")),
         glasses_cat = factor(glasses, labels = c("No", "Yes"))) 
```



# Customization of `tbl_summary()`



```{r}
tbl_summary(
  nlsy,
  by = sex_cat,
  include = c(sex_cat, race_eth_cat, region_cat,
              eyesight_cat, glasses, age_bir))
```

```{r}
tbl_summary(
  nlsy,
  by = sex_cat,
  include = c(sex_cat, race_eth_cat, region_cat,
              eyesight_cat, glasses, age_bir),
  label = list(
    race_eth_cat ~ "Race/ethnicity",
    region_cat ~ "Region",
    eyesight_cat ~ "Eyesight",
    glasses ~ "Wears glasses",
    age_bir ~ "Age at first birth"
  ),
  missing_text = "Missing")
```



Exercise 2.2 Part 2

Adding code below.



```{r}
#| eval: false 
tbl_summary(
  NLSY,
  by = sex_cat,
  include = c(sex_cat, race_eth_cat, region_cat,
              eyesight_cat, glasses, age_bir))
```



This is the corrected document.



```{r}
#| label: tbl-1
#| tbl-cap: "as_kable() table modified"
tbl_summary(
  nlsy,
  by = sex_cat,
  include = c(sex_cat, race_eth_cat, region_cat,
              eyesight_cat, glasses, age_bir)) |>
  	as_kable()
  
totalsamples <- nrow(nlsy)
```



@tbl-1 : this is modified by a as_kable pipe. This is actually the `r 2+2` table in the documents.

This did not work. Will this work: First, `r nrow(nlsy)` and second, will this `r totalsamples` . Hope so.



```{r}
ds <- list(n = nrow(nlsy), 
					 mean_age = mean(nlsy$age_bir, na.rm = TRUE)
					 )
```



The data should give me `r ds$n` and mean age of `r ds$mean_age`.

**Next section, Inline text function**



```{r}
#| label: tbl-descr
#| tbl-cap: "Descriptive statistics"
#| output-location: slide
table1 <- tbl_summary(
  nlsy,
  by = sex_cat,
  include = c(sex_cat, race_eth_cat, region_cat,
              eyesight_cat, glasses, age_bir, sleep_wknd)) |> 
  add_overall(last = TRUE)
table1
```



Next is the code for the inline table.



```{r}
sleepnd <- inline_text(table1, variable = "sleep_wknd", column = "stat_1")
```



This shows the data for the inline test in the following `r sleepnd`.

ATTEMPT LINEAR REGRESSION AND INLINE TEXT



```{r}
  income_table <- tbl_uvregression(
  	nlsy,
  y = income,
  include = c(
    sex_cat, race_eth_cat,
    eyesight_cat, income, age_bir
  ),
  method = lm
)
 income_table
```



Here is the attempt: `r inline_text(income_table, variable = "age_bir")`

FUNCTION

Structure of a function.



```{r}

#given vector x
y <- c(1,3,5,7,9)

#new mean function
new_mean <- function(x) {
												n <- length(x)
												new_val <- sum(x)/n
												
												return(new_val)
	
}
new_mean(y)

```



DEVELOP FUNCTION TO SQUARE A NUMBER



```{r}

square <- function(n){
											new_n <- n^2
											return(new_n)
								
}

x <- 8

square(x)


```



Attempt to concatenate.



```{r}
concat <- function(s, t){
												u <- paste(s,t)
												
												return(u)
}

d <- "How"
e <- "are you?"

 concat(d,e)
```



CREATE FUNCTION TO ADD TWO NUMBERS



```{r}
addit <- function(h,i){
											j <- h + i
											return(j)
}

m <- 6
n <- 4

addit(m,n)

#Play around with input
input1 <- readline(prompt = "Input01: ")
input2 <- readline(prompt = "Input02: ")

num1 <- as.numeric(input1)
num2 <- as.numeric(input2)

addit(num1, num2)
```



CREATE FUNCTION TO RAISE TO ANY POWER. USING DEFAULT VALUES.



```{r}

pwr <- function(fi, se = 1 ){
								nw <- fi^se
								return(nw)
	
}

lol <- 2
lmao <- 5

pwr(lol, lmao)


```



CREATE A FUNCTION TO CALCULATE STDEV. USE IF STATEMENT.



```{r}

x <- c(1,2,3,4,5,6,7,8,5,10,6,12)
na.rm <- TRUE

denom <- length(x) - 1
mean_x <- mean(x)
diff <- x - mean_x
square_diff <- diff^2
numer <- sum (square_diff)
stand_dev <- sqrt(numer/denom)
stand_dev

stdev <- function(x, na.rm = TRUE){
					 if (na.rm){
					 	x <- na.omit(x)
					 }
										
										denom <- length(x) - 1
										
										
											if (length(x) <= 0 ){
												return (NA)
											}
											else{
												
											
												mean_x <- mean(x)
												diff <- x - mean_x
												square_diff <- diff^2
												numer <- sum (square_diff)
												stand_dev <- sqrt(numer/denom)
												}
													return(stand_dev)
											}
							

}

stdev(nlsy$income, na.rm = TRUE)







prmt <- function(){
								
									
									nstdev <- as.numeric(readline(prompt = "How many input?: "))
									x <-length(nstdev)
									i <- x
									vx
									
									if (i < 1){}
									else{
										
									vx(i) <-	as.numeric(readline(prompt = "input " + i))
									}
									
									
								
								
}

prmt()

```

